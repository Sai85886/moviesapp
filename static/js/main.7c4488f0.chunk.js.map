{"version":3,"sources":["components/MovieComponent.js","components/MovieInfoComponent.js","App.js","reportWebVitals.js","index.js"],"names":["MovieContainer","styled","div","CoverImage","img","MovieName","span","InfoColumn","MovieInfo","MovieComponent","props","movie","Title","Year","imdbID","Type","Poster","onClick","onMovieSelect","src","Container","Close","MovieInfoComponent","useState","movieInfo","setMovieInfo","selectedMovie","useEffect","Axios","get","API_KEY","then","response","data","alt","imdbRating","Language","Rated","Released","Runtime","Genre","Director","Actors","Plot","Header","AppName","MovieImage","Placeholder","SearchBox","SearchIcon","SearchInput","input","MovieListContainer","App","searchQuery","updateSearchQuery","timeoutId","updateTimeoutId","movieList","updateMovieList","fetchData","searchString","a","Search","placeholder","value","onChange","e","clearTimeout","target","timeout","setTimeout","length","map","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c4488f0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MovieContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 10px;\r\n  width: 280px;\r\n  box-shadow: 0 3px 10px 0 #aaa;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  background-color: skyblue;\r\n`;\r\n\r\nconst CoverImage = styled.img`\r\n  object-fit: cover;\r\n  height: 362px;\r\n`;\r\n\r\nconst MovieName = styled.span`\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: brown;\r\n  margin: 15px 0;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nconst InfoColumn = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst MovieInfo = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: red;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-transform: capitalize;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nconst MovieComponent = (props) => {\r\n  const { Title, Year, imdbID, Type, Poster } = props.movie;\r\n  return (\r\n    <MovieContainer onClick={() => props.onMovieSelect(imdbID)}>\r\n      <CoverImage src={Poster} />\r\n      <MovieName>{Title}</MovieName>\r\n      <InfoColumn>\r\n        <MovieInfo>Year:{Year}</MovieInfo>\r\n        <MovieInfo>Type:{Type}</MovieInfo>\r\n      </InfoColumn>\r\n    </MovieContainer>\r\n  );\r\n};\r\n\r\nexport default MovieComponent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { API_KEY } from \"../App\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: 20px 30px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-bottom: 1px solid lightgray;\r\n  flex-wrap: wrap;\r\n`;\r\nconst CoverImage = styled.img`\r\n  object-fit: cover;\r\n  height: 350px;\r\n  border-radius: 10px;\r\n`;\r\nconst InfoColumn = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 20px;\r\n`;\r\nconst MovieName = styled.span`\r\n  font-size: 22px;\r\n  font-weight: 600;\r\n  color: black;\r\n  margin: 15px 0;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-transform: capitalize;\r\n  text-overflow: ellipsis;\r\n  & span {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\nconst MovieInfo = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: purple;\r\n  overflow: hidden;\r\n  margin: 4px 0;\r\n  text-transform: capitalize;\r\n  text-overflow: ellipsis;\r\n\r\n  & span {\r\n    opacity: 0.6;\r\n  }\r\n`;\r\nconst Close = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  color: black;\r\n  background: lightgray;\r\n  height: fit-content;\r\n  padding: 8px;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  opacity: 0.8;\r\n  margin-bottom: auto;\r\n`;\r\nconst MovieInfoComponent = (props) => {\r\n  const [movieInfo, setMovieInfo] = useState();\r\n  const { selectedMovie } = props;\r\n\r\n  useEffect(() => {\r\n    Axios.get(\r\n      `https://www.omdbapi.com/?i=${selectedMovie}&apikey=${API_KEY}`\r\n    ).then((response) => setMovieInfo(response.data));\r\n  }, [selectedMovie]);\r\n  return (\r\n    <Container>\r\n      {movieInfo ? (\r\n        <>\r\n          <CoverImage src={movieInfo?.Poster} alt={movieInfo?.Title} />\r\n          <InfoColumn>\r\n            <MovieName>\r\n              {movieInfo?.Type}: <span>{movieInfo?.Title}</span>\r\n            </MovieName>\r\n            <MovieInfo>\r\n              IMDB Rating: <span>{movieInfo?.imdbRating}</span>\r\n            </MovieInfo>\r\n            <MovieInfo>\r\n              Year: <span>{movieInfo?.Year}</span>\r\n            </MovieInfo>\r\n            <MovieInfo>\r\n              Language: <span>{movieInfo?.Language}</span>\r\n            </MovieInfo>\r\n            <MovieInfo>\r\n              Rated: <span>{movieInfo?.Rated}</span>\r\n            </MovieInfo>\r\n            <MovieInfo>\r\n              Released: <span>{movieInfo?.Released}</span>\r\n            </MovieInfo>\r\n            <MovieInfo>\r\n              Runtime: <span>{movieInfo?.Runtime}</span>\r\n            </MovieInfo>\r\n            <MovieInfo>\r\n              Genre: <span>{movieInfo?.Genre}</span>\r\n            </MovieInfo>\r\n            <MovieInfo>\r\n              Director: <span>{movieInfo?.Director}</span>\r\n            </MovieInfo>\r\n            <MovieInfo>\r\n              Actors: <span>{movieInfo?.Actors}</span>\r\n            </MovieInfo>\r\n            <MovieInfo>\r\n              Plot: <span>{movieInfo?.Plot}</span>\r\n            </MovieInfo>\r\n          </InfoColumn>\r\n          <Close onClick={() => props.onMovieSelect()}>X</Close>\r\n        </>\r\n      ) : (\r\n        \"Loading...\"\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\nexport default MovieInfoComponent;\r\n","import styled from \"styled-components\";\nimport MovieComponent from \"./components/MovieComponent\";\nimport React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport MovieInfoComponent from \"./components/MovieInfoComponent\";\n\nexport const API_KEY = \"72d55dde\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  /*background-image: url(\"/background.jpg\");*/\n  height: 100%;\n`;\n\nconst Header = styled.div`\n  background-color: #ffff66;\n  color: white;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  align-items: center;\n  padding: 10px;\n  font-size: 25px;\n  font-weight: bold;\n  box-shadow: 0 3px 6px 0 #555;\n`;\n\nconst AppName = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  color: black;\n`;\n\nconst MovieImage = styled.img`\n  width: 55px;\n  height: 55px;\n  margin: 10px;\n  border-radius: 50%;\n`;\n\nconst Placeholder = styled.img`\n  width: 150px;\n  height: 150px;\n  margin: 200px;\n  border-radius: 50%;\n`;\n\nconst SearchBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 10px 10px;\n  border-radius: 6px;\n  margin-left: 20px;\n  width: 50%;\n  background-color: white;\n`;\n\nconst SearchIcon = styled.img`\n  width: 32px;\n  height: 32px;\n`;\n\nconst SearchInput = styled.input`\n  color: black;\n  font-size: 16px;\n  font-weight: bold;\n  border: none;\n  outline: none;\n  margin-left: 15px;\n  flex: 1;\n`;\n\nconst MovieListContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  padding: 30px;\n  gap: 25px;\n  justify-content: space-evenly;\n`;\n\nfunction App() {\n  const [searchQuery, updateSearchQuery] = useState(\"\");\n  const [timeoutId, updateTimeoutId] = useState();\n  const [movieList, updateMovieList] = useState([]);\n  const [selectedMovie, onMovieSelect] = useState();\n\n  const fetchData = async (searchString) => {\n    const response = await Axios.get(\n      `https://www.omdbapi.com/?s=${searchString}&apikey=${API_KEY}`\n    );\n    updateMovieList(response.data.Search);\n  };\n\n  const onTextChange = (e) => {\n    clearTimeout(timeoutId);\n    updateSearchQuery(e.target.value);\n    const timeout = setTimeout(() => fetchData(e.target.value), 500);\n    updateTimeoutId(timeout);\n  };\n\n  return (\n    <Container>\n      <Header>\n        <AppName>\n          <MovieImage src=\"/Movie 05.jpg\" />\n          Movie Reviewzz\n        </AppName>\n        <SearchBox>\n          <SearchIcon src=\"/search-icon.svg\" />\n          <SearchInput\n            placeholder=\"Search For Movie's Here...\"\n            value={searchQuery}\n            onChange={onTextChange}\n          />\n        </SearchBox>\n      </Header>\n      {selectedMovie && (\n        <MovieInfoComponent\n          selectedMovie={selectedMovie}\n          onMovieSelect={onMovieSelect}\n        />\n      )}\n      <MovieListContainer>\n        {movieList?.length ? (\n          movieList.map((movie, index) => (\n            <MovieComponent\n              key={index}\n              movie={movie}\n              onMovieSelect={onMovieSelect}\n            />\n          ))\n        ) : (\n          <Placeholder src=\"/cinema.png\" />\n        )}\n      </MovieListContainer>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}